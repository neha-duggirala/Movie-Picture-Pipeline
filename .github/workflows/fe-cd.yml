# Workflow name
name: Frontend CD Workflow

# Triggers
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
  # Automatic trigger on push events targeting the main branch
  push:
    branches:
      - main

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                node-version: '14'
            - name: Install dependencies
              run: |
                npm install
              working-directory: starter/frontend
            - name: Run ESLint
              run: npm run lint
              working-directory: starter/frontend
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                node-version: '14'
            - name: Install dependencies
              run: npm install
              working-directory: starter/frontend
            - name: Run tests
              run: npm test --passWithNoTests
              working-directory: starter/frontend
    build:
        runs-on: ubuntu-latest
        needs: [lint, test]
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                node-version: '14'

            - name: Create environment variable
              run: REACT_APP_MOVIE_API_URL=http://localhost:5000

            - name: Install dependencies
              run: npm install

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: us-east-1

            - name: Set up ECR login
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
        
            # - name: Build Docker image
            #   run: docker build -t frontend-app:latest .
            #   working-directory: starter/frontend
